{"version":3,"file":"static/js/662.e179898f.chunk.js","mappings":"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","sources":["Components/Sections/Contact.js","shared/Card.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { motion } from 'framer-motion';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\n\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\nimport Input from '../../shared/Input'\r\nimport Button from '../../shared/Button';\r\n\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_EMAIL\r\n} from '../../shared/validators';\r\n\r\nimport { useForm } from '../../hooks/form-hook';\r\nimport Card from '../../shared/Card';\r\n\r\nconst Contact = () => {\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      firstName: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      lastName: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      phone: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      message: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [])\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    const newFormData = {\r\n      firstName: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      lastName: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      phone: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      message: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    }\r\n    setSubmit(prevSubmit => !prevSubmit)\r\n    setFormData(newFormData, false)\r\n    alert('Your message has been sent')\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className='contact'\r\n        style={{ position: 'relative' }}\r\n      >\r\n        <motion.div\r\n          \r\n          initial={{ opacity: 0 }}\r\n          whileInView={{ opacity: 1, transition: { duration: 0.5, delay: 0.2 } }}\r\n          viewport={{ once: true }}\r\n          className='contact-container'\r\n        >\r\n          <Card>\r\n            {isLoading && (\r\n              <div>\r\n                <LoadingSpinner asOverlay />\r\n              </div>\r\n            )}\r\n\r\n            <h2>Contact Us</h2>\r\n            <form className=\"contact-form\" onSubmit={(e) => { e.preventDefault() }}>\r\n              <div className='form-column'>\r\n                <Input\r\n                  id=\"firstName\"\r\n                  submitted={submit}\r\n                  element=\"input\"\r\n                  type=\"text\"\r\n                  label=\"First Name\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  errorText=\"Please enter your first name.\"\r\n                  onInput={inputHandler}\r\n                />\r\n                <Input\r\n                  id=\"lastName\"\r\n                  submitted={submit}\r\n                  element=\"input\"\r\n                  type=\"text\"\r\n                  label=\"Last Name\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  errorText=\"Please enter your last name.\"\r\n                  onInput={inputHandler}\r\n                />\r\n              </div>\r\n              <div className='form-column'>\r\n                <Input\r\n                  id=\"email\"\r\n                  submitted={submit}\r\n                  element=\"input\"\r\n                  type=\"text\"\r\n                  label=\"Email\"\r\n                  validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\r\n                  errorText=\"Please enter your email.\"\r\n                  onInput={inputHandler}\r\n                />\r\n                <Input\r\n                  id=\"phone\"\r\n                  submitted={submit}\r\n                  element=\"input\"\r\n                  type=\"number\"\r\n                  label=\"Phone Number\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  errorText=\"Please enter your phone number.\"\r\n                  onInput={inputHandler}\r\n                />\r\n              </div>\r\n\r\n              <Input\r\n                id=\"message\"\r\n                submitted={submit}\r\n                element=\"textarea\"\r\n                type=\"text\"\r\n                label=\"Message\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Please enter your message.\"\r\n                onInput={inputHandler}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={!formState.isValid}\r\n                onClick={submitHandler}\r\n              >\r\n                SEND\r\n              </Button>\r\n            </form>\r\n          </Card>\r\n        </motion.div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["_useHttpClient","useHttpClient","isLoading","_useState","error","sendRequest","clearError","useState","_useState2","_slicedToArray","submit","setSubmit","_useForm","useForm","firstName","value","isValid","lastName","email","phone","message","_useForm2","formState","inputHandler","setFormData","useEffect","window","scrollTo","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","newFormData","wrap","_context","prev","next","preventDefault","prevSubmit","alert","stop","_x","apply","arguments","_jsx","React","children","className","style","position","motion","initial","opacity","whileInView","transition","duration","delay","viewport","once","_jsxs","Card","LoadingSpinner","asOverlay","onSubmit","Input","id","submitted","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_EMAIL","Button","disabled","onClick","props","concat"],"sourceRoot":""}