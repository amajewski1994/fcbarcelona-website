{"version":3,"file":"static/js/26.0a6dd463.chunk.js","mappings":"2PAiBA,EAfqB,SAAHA,GAAuC,IAAjCC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAQJ,EAARI,SACvC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UAACC,EAAAA,EAAAA,KAAA,OAAKC,IAAG,GAAAC,OAAKC,0DAA6B,KAAAD,OAAIR,GAASU,IAAKT,OAEtGK,EAAAA,EAAAA,KAAA,OAAKP,GAAIA,EAAI,YAAU,OAAOK,UAAU,mBAAmBO,QAAST,EAASG,UAC3EC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,yBAElBE,EAAAA,EAAAA,KAAA,OAAKP,GAAIA,EAAI,YAAU,QAAQK,UAAU,oBAAoBO,QAAST,EAASG,UAC7EC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,2BAIxB,E,wCCiFA,EA/EwB,SAAHN,GAA6B,IAAvBc,EAAId,EAAJc,KAEvBC,GAFsCf,EAATgB,WAEyBC,EAAAA,EAAAA,MAA9CC,EAASH,EAATG,UAAkBC,GAAFJ,EAALK,MAAkBL,EAAXI,aAE1BE,GAFiDN,EAAVO,YAELC,EAAAA,EAAAA,GAC9B,CACIpB,KAAM,CACFqB,MAAO,GACPC,SAAS,GAEbvB,MAAO,CACHsB,MAAO,GACPC,SAAS,KAGjB,IACHC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAZMO,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAcxBI,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKmC,OAJ9DL,EAAEM,iBAAiBH,EAAAC,KAAA,GAETH,EAAW,IAAIM,UACZC,OAAO,OAAQhB,EAAUiB,OAAO1C,KAAKqB,OAC9Ca,EAASO,OAAO,QAAShB,EAAUiB,OAAO3C,MAAMsB,MAAM,IAAIe,EAAAE,KAAA,EAC/BtB,EAAY,GAADT,OAAIC,2DAAiC,YAAY,OACnF0B,EACA,CAEIS,cAAe,UAAYhC,EAAKiC,QAEtC,KAAD,EANiBR,EAAAS,KAOlBC,OAAOC,SAASC,SAChBZ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEAc,QAAQC,IAAGf,EAAAa,IAAM,yBAAAb,EAAAgB,OAAA,GAAApB,EAAA,mBAExB,gBAlBoBqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAqBrB,OACIrD,EAAAA,EAAAA,MAACsD,EAAAA,SAAc,CAAApD,SAAA,CACVW,IAAcV,EAAAA,EAAAA,KAAA,OAAAD,UACXC,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,CAACC,WAAW,OAE/BxD,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACsD,EAAAA,EAAK,CACF7D,GAAG,OACH8D,QAAQ,QACRC,KAAK,OACLC,MAAM,OACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,2BACVC,QAASxC,OAGjBrB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAW,CACRrE,GAAG,QACHoE,QAASxC,EACTuC,UAAU,gCAIlB5D,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CACHP,KAAK,SACLQ,UAAW5C,EAAUH,QACrBZ,QAASiB,EAAgBvB,SAC5B,qBAQrB,E,oBCoFA,EApKgB,WAEZ,IAAMO,GAAO2D,EAAAA,EAAAA,YAAWC,EAAAA,GAExBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAlD,EAAAA,EAAAA,GAAAgD,EAAA,GAAvCG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9B9D,GAAsDE,EAAAA,EAAAA,KAA9CC,EAASH,EAATG,UAAkBC,GAAFJ,EAALK,MAAkBL,EAAXI,aAE1B6D,GAFiDjE,EAAVO,YAEbsD,EAAAA,EAAAA,WAAS,IAAMK,GAAAtD,EAAAA,EAAAA,GAAAqD,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0CR,EAAAA,EAAAA,WAAS,GAAMS,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAsCZ,EAAAA,EAAAA,WAAS,GAAMa,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BzE,EAAY,WACdmE,GAAS,GACTI,GAAiB,EACrB,EAEMK,EAAY,SAACxD,GACXA,EAAEyD,OACFN,GAAiB,GAEjBJ,GAAS,EAGjB,GAwBAW,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAW,eAAA/F,GAAAgC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA6D,EAAA,OAAA/D,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACQ,OAApBuD,EAAkB,GAAEzD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOtB,EAAY,GAADT,OAC/BC,2DAAiC,YACtC,KAAD,EAFiB4B,EAAAS,KAGLiD,OAAOC,SAAQ,SAACnC,EAAS9D,GAClC,IAAMkG,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTrC,GAAO,IACVsC,MAAOpG,IAEX+F,EAAgBM,KAAKH,EACzB,IACApB,EAAaiB,GAAgBzD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,kCAAAA,EAAAgB,OAAA,GAAApB,EAAA,kBAEpC,kBAfgB,OAAAnC,EAAAyD,MAAA,KAAAC,UAAA,KAgBjBqC,IAEAQ,YAAW,WACPtD,OAAOuD,SAAS,EAAG,EACvB,GAAG,IAEP,GAAG,CAACrF,IAEJ,IAAM8E,EAASnB,EAAU2B,KAAI,SAAC1C,EAAS9D,GAKnC,OAAOI,EAAAA,EAAAA,MAACqG,EAAAA,EAAAA,IAAU,CAEdpG,UAAU,kBACVO,QAPiB,WACjB8E,EAAe5B,GACf6B,EAAU7B,EACd,EAKI4C,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,EAAGE,WAAY,CAAEC,SAAU,GAAKC,MAAO,KAC/DC,SAAU,CAAEC,MAAM,GAAO3G,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACnCC,EAAAA,EAAAA,KAAA,OAAKC,IAAG,GAAAC,OAAKC,0DAA6B,KAAAD,OAAIqD,EAAQ7D,OAASU,IAAKmD,EAAQ5D,UAEhFK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAWC,EAAAA,EAAAA,KAAA,KAAAD,SAAIwD,EAAQoD,OAAOC,eACjF5G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAA8BC,UACzCC,EAAAA,EAAAA,KAAA,MAAAD,SAAKwD,EAAQ5D,gBAdpB4D,EAAQ9D,GAoBrB,IAEA,OACII,EAAAA,EAAAA,MAACsD,EAAAA,SAAc,CAAApD,SAAA,EACXC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CACF/G,UAAU,gBACVgH,KAAMpC,EACNqC,SAAUvG,EACVwG,OAAQ9B,GAAeA,EAAYvF,KACnCsH,YAAY,wBACZlH,UACIC,EAAAA,EAAAA,KAACmD,EAAAA,SAAc,CAAApD,UACXC,EAAAA,EAAAA,KAACkH,EAAY,CAACzH,GAAIyF,EAAYW,MAAOnG,MAAOwF,EAAYxF,MAAOC,KAAMuF,EAAYvF,KAAMC,SAtF1F,SAACgC,GACd,GAAI0C,EAAU6C,OAAS,EAAG,CACtB,IAEIC,EAFEC,EAAOzF,EAAEyD,OAAOiC,aAAa,aAC7BC,EAAWC,SAAS5F,EAAEyD,OAAO5F,IAI3B2H,EAFK,SAATC,EACiB,IAAbE,EACYjD,EAAUA,EAAU6C,OAAS,GAE7B7C,EAAUiD,EAAW,GAGjCA,IAAajD,EAAU6C,OAAS,EACpB7C,EAAU,GAEVA,EAAUiD,EAAW,GAGzCpC,EAAeiC,EACnB,CACJ,MAqEYK,aAAa,kBACbC,YAAY,oBAEhB1H,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CACF/G,UAAU,gBACVgH,KAAMhC,EACNiC,SAAUvG,EACVwG,OAAO,YACPC,YAAY,wBACZlH,UACIC,EAAAA,EAAAA,KAACmD,EAAAA,SAAc,CAAApD,UACXC,EAAAA,EAAAA,KAAC2H,EAAe,CAACrH,KAAMA,EAAME,UAAWA,MAGhDiH,aAAa,kBACbC,YAAY,oBAEhB7H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,CACnBW,IACGV,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACnBC,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,CAACC,WAAW,OAGjC3C,IACEb,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIF,EAAAA,EAAAA,MAACqG,EAAAA,EAAAA,IAAU,CACPpG,UAAU,2BACV8H,MAAO,CAAEC,SAAU,YACnB1B,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,EAAGE,WAAY,CAAEC,SAAU,GAAKC,MAAO,KAC/DC,SAAU,CAAEC,MAAM,GAAO3G,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHO,EAAKwH,aAAe9H,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UACjEC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAM,CAAC1D,QAAS+E,EAAUrF,SAAC,kBAIpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAC7BuE,EAAU6C,OAAS,GAAK1B,YASrD,C","sources":["Components/Sections/Gallery/GalleryPhoto.js","Components/Sections/Gallery/GalleryPhotoNew.js","Components/Sections/Gallery/Gallery.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst GalleryPhoto = ({ id, image, name, onChange }) => {\r\n  return (\r\n    <div className='gallery-photo'>\r\n      <div className='gallery-photo__container'><img src={`${process.env.REACT_APP_AWS_URL}/${image}`} alt={name}></img></div>\r\n\r\n      <div id={id} data-side='left' className='arrow arrow-left' onClick={onChange}>\r\n        <span className=\"fas fa-arrow-left\"></span>\r\n      </div>\r\n      <div id={id} data-side='right' className='arrow arrow-right' onClick={onChange}>\r\n        <span className=\"fas fa-arrow-right\"></span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GalleryPhoto","import React from 'react'\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\n\r\nimport LoadingSpinner from '../../../shared/LoadingSpinner';\r\nimport Input from '../../../shared/Input'\r\nimport Button from '../../../shared/Button';\r\nimport ImageUpload from '../../../shared/ImageUpload';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_EMAIL,\r\n    VALIDATOR_MINLENGTH\r\n} from '../../../shared/validators';\r\n\r\nimport { useForm } from '../../../hooks/form-hook';\r\n\r\nconst GalleryPhotoNew = ({ auth, hideModal }) => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            name: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            image: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const registerHandler = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('image', formState.inputs.image.value[0]);\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/photos/`, 'POST',\r\n                formData,\r\n                {\r\n                    // 'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            window.location.reload();\r\n            //   history.push('/');\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && (<div>\r\n                <LoadingSpinner asOverlay={true} />\r\n            </div>)}\r\n            <form>\r\n                <div>\r\n                    <Input\r\n                        id=\"name\"\r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        label=\"Name\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter photo name.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <ImageUpload\r\n                        id=\"image\"\r\n                        onInput={inputHandler}\r\n                        errorText=\"Please provide an image.\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        disabled={!formState.isValid}\r\n                        onClick={registerHandler}\r\n                    >\r\n                        ADD PHOTO\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default GalleryPhotoNew","import React, { useState, useEffect, useContext } from 'react'\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Button from '../../../shared/Button';\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport LoadingSpinner from '../../../shared/LoadingSpinner';\r\n\r\nimport GalleryPhoto from './GalleryPhoto';\r\nimport GalleryPhotoNew from './GalleryPhotoNew';\r\nimport Modal from '../../../shared/Modal';\r\n\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst Gallery = () => {\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [photoList, setPhotoList] = useState([]);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [newPhotoModal, setNewPhotoModal] = useState(false);\r\n    const [activePhoto, setActivePhoto] = useState(false);\r\n\r\n    const hideModal = () => {\r\n        setModal(false)\r\n        setNewPhotoModal(false)\r\n    }\r\n\r\n    const showModal = (e) => {\r\n        if (e.target) {\r\n            setNewPhotoModal(true)\r\n        } else {\r\n            setModal(true)\r\n        }\r\n\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        if (photoList.length > 1) {\r\n            const side = e.target.getAttribute('data-side')\r\n            const activeId = parseInt(e.target.id)\r\n            let nextPhoto\r\n            if (side === 'left') {\r\n                if (activeId === 0) {\r\n                    nextPhoto = photoList[photoList.length - 1]\r\n                } else {\r\n                    nextPhoto = photoList[activeId - 1]\r\n                }\r\n            } else {\r\n                if (activeId === photoList.length - 1) {\r\n                    nextPhoto = photoList[0]\r\n                } else {\r\n                    nextPhoto = photoList[activeId + 1]\r\n                }\r\n            }\r\n            setActivePhoto(nextPhoto)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchPhotos = async () => {\r\n            let photosWithIndex = []\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/photos`\r\n                );\r\n                responseData.photos.forEach((element, id) => {\r\n                    const newElement = {\r\n                        ...element,\r\n                        index: id\r\n                    }\r\n                    photosWithIndex.push(newElement)\r\n                })\r\n                setPhotoList(photosWithIndex)\r\n            } catch (err) { }\r\n        };\r\n        fetchPhotos();\r\n\r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n        }, 250);\r\n\r\n    }, [sendRequest]);\r\n\r\n    const photos = photoList.map((element, id) => {\r\n        const clickHandler = () => {\r\n            setActivePhoto(element)\r\n            showModal(element)\r\n        }\r\n        return <motion.div\r\n            key={element.id}\r\n            className='gallery-element'\r\n            onClick={clickHandler}\r\n            initial={{ opacity: 0 }}\r\n            whileInView={{ opacity: 1, transition: { duration: 0.5, delay: 0.2 } }}\r\n            viewport={{ once: true }}\r\n        >\r\n            <div className='gallery-element__image'>\r\n                <img src={`${process.env.REACT_APP_AWS_URL}/${element.image}`} alt={element.name} />\r\n            </div>\r\n            <div className='gallery-element__info'>\r\n                <div className='gallery-element__bottom'>\r\n                    <div className='gallery-element__bottom-author'><p>Author:</p><p>{element.author.nickname}</p></div>\r\n                    <div className='gallery-element__bottom-name'>\r\n                        <h3>{element.name}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </motion.div>\r\n\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                className='gallery-modal'\r\n                show={modal}\r\n                onCancel={hideModal}\r\n                header={activePhoto && activePhoto.name}\r\n                headerClass='gallery-modal__header'\r\n                children={\r\n                    <React.Fragment>\r\n                        <GalleryPhoto id={activePhoto.index} image={activePhoto.image} name={activePhoto.name} onChange={onChange} />\r\n                    </React.Fragment>\r\n                }\r\n                contentClass='gallery-content'\r\n                footerClass='gallery-footer'\r\n            ></Modal>\r\n            <Modal\r\n                className='gallery-modal'\r\n                show={newPhotoModal}\r\n                onCancel={hideModal}\r\n                header='New Photo'\r\n                headerClass='gallery-modal__header'\r\n                children={\r\n                    <React.Fragment>\r\n                        <GalleryPhotoNew auth={auth} hideModal={hideModal} />\r\n                    </React.Fragment>\r\n                }\r\n                contentClass='gallery-content'\r\n                footerClass='gallery-footer'\r\n            ></Modal>\r\n            <div className='gallery'>\r\n                {isLoading && (\r\n                    <div className='center'>\r\n                        <LoadingSpinner asOverlay={true} />\r\n                    </div>\r\n                )}\r\n                {!isLoading && (\r\n                    <div>\r\n                        <motion.div\r\n                            className='section-title__container'\r\n                            style={{ position: 'relative' }}\r\n                            initial={{ opacity: 0 }}\r\n                            whileInView={{ opacity: 1, transition: { duration: 0.5, delay: 0.2 } }}\r\n                            viewport={{ once: true }}\r\n                        >\r\n                            <h1>Gallery</h1>\r\n                            {auth.isLoggedIn && (<div className='section-title__container-button'>\r\n                                <Button onClick={showModal}>ADD NEW</Button>\r\n                            </div>)}\r\n\r\n                        </motion.div>\r\n                        <div className='gallery-container'>\r\n                            {photoList.length > 0 && photos}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                )}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Gallery"],"names":["_ref","id","image","name","onChange","_jsxs","className","children","_jsx","src","concat","process","alt","onClick","auth","_useHttpClient","hideModal","useHttpClient","isLoading","sendRequest","error","_useForm","clearError","useForm","value","isValid","_useForm2","_slicedToArray","formState","inputHandler","registerHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","Authorization","token","sent","window","location","reload","t0","console","log","stop","_x","apply","arguments","React","LoadingSpinner","asOverlay","Input","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","ImageUpload","Button","disabled","useContext","AuthContext","_useState","useState","_useState2","photoList","setPhotoList","_useState3","_useState4","modal","setModal","_useState5","_useState6","newPhotoModal","setNewPhotoModal","_useState7","_useState8","activePhoto","setActivePhoto","showModal","target","useEffect","fetchPhotos","photosWithIndex","photos","forEach","newElement","_objectSpread","index","push","setTimeout","scrollTo","map","motion","initial","opacity","whileInView","transition","duration","delay","viewport","once","author","nickname","Modal","show","onCancel","header","headerClass","GalleryPhoto","length","nextPhoto","side","getAttribute","activeId","parseInt","contentClass","footerClass","GalleryPhotoNew","style","position","isLoggedIn"],"sourceRoot":""}