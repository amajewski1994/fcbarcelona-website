{"version":3,"file":"static/js/694.eae8ff52.chunk.js","mappings":"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","sources":["Components/Sections/Store/SingleItem.js","shared/Card.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport Card from '../../../shared/Card'\r\nimport Button from '../../../shared/Button'\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport LoadingSpinner from '../../../shared/LoadingSpinner';\r\n\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nimport { CartContext } from '../../../context/cart-context';\r\n\r\nconst SingleItem = () => {\r\n\r\n  const [item, setItem] = useState([]);\r\n  const [isInCart, setIsInCart] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1000 ? true : false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [activeImage, setActiveImage] = useState()\r\n  const [imageStyleScale, setImageStyleScale] = useState(1)\r\n  const [imageStyleTransform, setImageStyleTransform] = useState('center')\r\n\r\n  const { addProduct, cartItems } = useContext(CartContext)\r\n  let navigate = useNavigate();\r\n\r\n  let params = useParams()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    const fetchItem = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/items/${params.iid}`\r\n        );\r\n        setItem(responseData.item)\r\n        setActiveImage(responseData.item.images[0])\r\n      } catch (err) { }\r\n    };\r\n    fetchItem();\r\n  }, [sendRequest]);\r\n\r\n  useEffect(() => {\r\n    cartItems.forEach(element => {\r\n      if (element.id === item.id) return setIsInCart(true)\r\n    });\r\n  }, [cartItems, item])\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newWidth = window.innerWidth;\r\n      if (newWidth < 1000) {\r\n        setIsMobile(true)\r\n      } else {\r\n        setIsMobile(false)\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions)\r\n\r\n  }, []);\r\n\r\n  const mouseInEvent = () => {\r\n    if (!isMobile) {\r\n      setImageStyleScale(2)\r\n    }\r\n  }\r\n\r\n  const mouseOutEvent = () => {\r\n    setImageStyleScale(1)\r\n    setImageStyleTransform('-50%, -50%')\r\n  }\r\n\r\n  const mouseMoveEvent = (e) => {\r\n\r\n    const x = e.clientX - e.target.offsetLeft\r\n    const y = e.clientY - e.target.offsetTop\r\n\r\n    const iWidth = e.target.offsetWidth\r\n    const iHeight = e.target.offsetHeight\r\n\r\n    const transformX = x / iWidth * -100\r\n    const transformY = y / iHeight * -100\r\n\r\n    if (!isMobile) {\r\n      setImageStyleTransform(`${transformX}%, ${transformY}%`)\r\n    }\r\n  }\r\n\r\n  const elementClick = (e) => {\r\n    const id = parseInt(e.target.id)\r\n    setActiveImage(item.images[id])\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='single-item'>\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && item && activeImage && (\r\n        <div>\r\n          {/* <div ref={card} style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}> */}\r\n          <Card>\r\n            <div className='single-item__container'>\r\n              <div className='single-item__container-left'>\r\n                <div className='main-image' onMouseEnter={mouseInEvent} onMouseLeave={mouseOutEvent} onMouseMove={mouseMoveEvent}>\r\n                \r\n                  <img src={`${process.env.REACT_APP_AWS_URL}/${activeImage}`} alt={item.name} style={{ transform: `translate(${imageStyleTransform}) scale(${imageStyleScale})` }} />\r\n                </div>\r\n                <div className='images-container'>\r\n                  {item.images.map((image, id) => {\r\n                    return (<div key={id} id={id} className='images-container__element' onClick={elementClick}><img className='img-contain' src={`${process.env.REACT_APP_AWS_URL}/${item.images[id]}`} alt={item.name} style={{ pointerEvents: 'none' }} /></div>)\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className='single-item__container-right'>\r\n                <h1>{item.name}</h1>\r\n                <div className='item-description'>\r\n                  <h4>Description:</h4>\r\n                  <p>{item.description}</p>\r\n                </div>\r\n                <div className='container'>\r\n                  <div className='item-price'>\r\n                    <h4>Price: <span>{item.price} $ </span></h4>\r\n                  </div>\r\n                  <div className='item-button'>\r\n                    {!isInCart ? (<Button size='big' onClick={() => {\r\n                      addProduct(item);\r\n                    }}>ADD TO CART</Button>) : (<Button size='big' onClick={() => {\r\n                      navigate(\"cart\")\r\n                    }}>GO TO CART</Button>)}\r\n                  </div>\r\n                </div>\r\n                <div className='item-back-button'>\r\n                  <Button\r\n                    size='small'\r\n                    inverse={true}\r\n                    onClick={() => { navigate(-1) }}\r\n                  >Back to list</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      )\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default SingleItem","import React from 'react';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","item","setItem","_useState3","_useState4","isInCart","setIsInCart","_useState5","window","innerWidth","_useState6","isMobile","setIsMobile","_useHttpClient","useHttpClient","isLoading","sendRequest","error","_useState7","clearError","_useState8","activeImage","setActiveImage","_useState9","_useState10","imageStyleScale","setImageStyleScale","_useState11","_useState12","imageStyleTransform","setImageStyleTransform","_useContext","useContext","CartContext","addProduct","cartItems","navigate","useNavigate","params","useParams","useEffect","scrollTo","fetchItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","iid","sent","images","t0","stop","apply","arguments","forEach","element","id","updateWindowDimensions","newWidth","addEventListener","removeEventListener","elementClick","e","parseInt","target","_jsxs","className","children","_jsx","LoadingSpinner","Card","onMouseEnter","onMouseLeave","onMouseMove","x","clientX","offsetLeft","y","clientY","offsetTop","iWidth","offsetWidth","transformY","offsetHeight","src","alt","name","style","transform","map","image","onClick","pointerEvents","description","price","Button","size","inverse","props"],"sourceRoot":""}