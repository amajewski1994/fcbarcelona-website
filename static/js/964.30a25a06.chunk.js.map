{"version":3,"file":"static/js/964.30a25a06.chunk.js","mappings":"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","sources":["Components/Sections/Team/SinglePlayer.js","shared/Card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport Card from '../../../shared/Card'\r\nimport Button from '../../../shared/Button';\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport LoadingSpinner from '../../../shared/LoadingSpinner';\r\n\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nconst SinglePlayer = () => {\r\n\r\n    const [player, setPlayer] = useState();\r\n\r\n    const navigate = useNavigate()\r\n    let params = useParams()\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const fetchPlayer = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/players/${params.pid}`\r\n                );\r\n                setPlayer(responseData.player)\r\n            } catch (err) { }\r\n        };\r\n        fetchPlayer();\r\n    }, [sendRequest]);\r\n\r\n    return (\r\n        <div className='single-player'>\r\n            <div>\r\n                <Card>\r\n                    {isLoading && (\r\n                        <div className='center'>\r\n                            <LoadingSpinner asOverlay={true} />\r\n                        </div>\r\n                    )}\r\n                    {!isLoading && player && <><div className='single-player__container'>\r\n                        <div className='single-player__image'>\r\n                            <img src={`${process.env.REACT_APP_AWS_URL}/${player.image}`} alt={player.name}></img>\r\n                        </div>\r\n                        <div className='single-player__info'>\r\n                            <h2>{player.name}</h2>\r\n                            <div className='single-player__info-container'>\r\n                                <div>\r\n                                    <p><span>Number:</span> {player.number}</p>\r\n                                    <p><span>Position:</span> {player.position}</p>\r\n                                    <p><span>Born:</span> {player.born}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p><span>Height:</span> {player.height} cm</p>\r\n                                    <p><span>Weight:</span> {player.weight} kg</p>\r\n                                    <p><span>Country:</span> {player.country}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div className='single-player__description'>\r\n                            {player.description && player.description.map((description, id) => {\r\n                                return (<p key={id}>\r\n                                    {description}\r\n                                </p>)\r\n                            })}\r\n                        </div>\r\n                        <Button\r\n                            onClick={() => { navigate(-1) }}\r\n                        >Back to list</Button></>}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePlayer","import React from 'react';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","player","setPlayer","navigate","useNavigate","params","useParams","_useHttpClient","useHttpClient","isLoading","sendRequest","error","clearError","useEffect","window","scrollTo","fetchPlayer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","pid","sent","t0","stop","apply","arguments","_jsx","className","children","_jsxs","Card","LoadingSpinner","asOverlay","_Fragment","src","image","alt","name","number","position","born","height","weight","country","description","map","id","Button","onClick","props","style"],"sourceRoot":""}