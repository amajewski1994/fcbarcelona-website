{"version":3,"file":"static/js/969.21db3e38.chunk.js","mappings":"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","sources":["Components/Sections/News/SingleNews.js","shared/Card.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport Card from '../../../shared/Card'\r\nimport Button from '../../../shared/Button'\r\nimport Input from '../../../shared/Input'\r\n\r\nimport {\r\n  VALIDATOR_REQUIRE\r\n} from '../../../shared/validators';\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport LoadingSpinner from '../../../shared/LoadingSpinner';\r\n\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nimport { CartContext } from '../../../context/cart-context';\r\nimport { useForm } from '../../../hooks/form-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst SingleNews = () => {\r\n\r\n  const auth = useContext(AuthContext);\r\n  const [news, setNews] = useState(false);\r\n  const [comments, setComments] = useState(false);\r\n  const [like, setLike] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  let params = useParams()\r\n  const navigate = useNavigate()\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      comment: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const submitCommentHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/comments/${params.nid}`, 'POST',\r\n        JSON.stringify({\r\n          comment: formState.inputs.comment.value\r\n        }), {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + auth.token\r\n      }\r\n      );\r\n    } catch (err) { }\r\n    fetchComments();\r\n  }\r\n\r\n  const addLikeHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/news/likes/${params.nid}`, 'PATCH',\r\n        JSON.stringify({\r\n        }), {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + auth.token\r\n      }\r\n      );\r\n      setLike(prevLike => !prevLike)\r\n      setNews(responseData.news)\r\n    } catch (err) { }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/news/${params.nid}`\r\n        );\r\n        setNews(responseData.news)\r\n      } catch (err) { }\r\n    };\r\n    fetchNews();\r\n    fetchComments();\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0);\r\n    }, 250)\r\n  }, [sendRequest]);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/comments/${params.nid}`\r\n      );\r\n      setComments(responseData.comments)\r\n    } catch (err) { }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.userId && news.likes) {\r\n      const isLiked = news.likes.find(id => id === auth.userId)\r\n      console.log(!!isLiked)\r\n      setLike(!!isLiked)\r\n    } else {\r\n      setLike(false)\r\n    }\r\n  }, [auth.userId, news.likes])\r\n\r\n  const deleteCommentHandler = async (e) => {\r\n    try {\r\n      const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/comments/${e.target.id}`, \r\n      'DELETE',\r\n      null, \r\n      {\r\n        Authorization: 'Bearer ' + auth.token\r\n      }\r\n      );\r\n    } catch (err) { }\r\n    fetchComments()\r\n  }\r\n\r\n\r\n  const commentsList = comments && comments.map((element, id) => {\r\n    return (\r\n      <div key={element.id} className={`comment ${(parseInt(id) % 2) && 'even'}`}>\r\n        <span className={`fas fa-times ${element.author.id === auth.userId && 'visible'}`} id={element.id} onClick={deleteCommentHandler}></span>\r\n        <div className='comment-author'><b>{element.author.nickname}</b></div>\r\n        <div className='comment-content'>{element.comment}</div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const description = news && news.article.map((element, id) => {\r\n    return (<div key={id} className='news-single__article'>\r\n      <div className='news-single__article-title'>\r\n        <h3>{element.title}</h3>\r\n      </div>\r\n      <div className='news-single__article-description'>\r\n        {element.description}\r\n      </div>\r\n    </div>)\r\n  })\r\n\r\n  return (\r\n\r\n    <div className='news-single'>\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner asOverlay={true} />\r\n        </div>\r\n      )}\r\n      {!isLoading && news && (\r\n        <Card>\r\n\r\n          {news && <div className='news-single__container'>\r\n            <div className='news-single__image'>\r\n              <img src={`${process.env.REACT_APP_AWS_URL}/${news.image}`} alt={news.name} />\r\n            </div>\r\n            <div className='news-single__info'>\r\n              <div className='news-single__info-title'>\r\n                <h2>{news.title}</h2>\r\n              </div>\r\n              {description}\r\n              <div className='news-single__info-bottom'>\r\n                <div className='news-single__info-bottom-date'>{news.createdAt.slice(0, 10)}</div>\r\n                <div className='news-single__info-bottom-author'>Author: <b>{news.author.nickname}</b></div>\r\n                <div className='news-single__info-bottom-likes'><span onClick={addLikeHandler} className=\"fas fa-thumbs-up\"></span> {news.likes.length}{like && <div>You like it!</div>}</div>\r\n              </div>\r\n            </div>\r\n            <div className='news-single__comments'>\r\n              <div className='back'>\r\n                <Button\r\n                  onClick={() => { navigate(-1) }}>\r\n                  Back to list\r\n                </Button>\r\n              </div>\r\n\r\n              {auth.isLoggedIn && <div style={{ margin: '50px auto' }}>\r\n                <Input\r\n                  id={'comment'}\r\n                  element=\"textarea\"\r\n                  label=\"Your Comment\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  // errorText=\"Please enter a comment.\"\r\n                  onInput={inputHandler}\r\n                />\r\n                <Button\r\n                  size='small'\r\n                  inverse={true}\r\n                  disabled={!formState.isValid}\r\n                  onClick={submitCommentHandler}\r\n                >Add Comment</Button>\r\n              </div>}\r\n              <h4>Comments</h4>\r\n              {commentsList.length > 0 ? <div className='news-single__comments-container'>\r\n\r\n                {commentsList}\r\n              </div> : <span style={{ display: 'block', textAlign: 'center' }}>no comments yet</span>}\r\n\r\n            </div>\r\n          </div>}\r\n\r\n        </Card>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleNews","import React from 'react';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["auth","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","news","setNews","_useState3","_useState4","comments","setComments","_useState5","_useState6","like","setLike","_useHttpClient","useHttpClient","isLoading","sendRequest","error","params","clearError","useParams","navigate","useNavigate","_useForm","useForm","comment","value","isValid","_useForm2","formState","inputHandler","submitCommentHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","concat","process","nid","JSON","stringify","inputs","Authorization","token","sent","t0","fetchComments","stop","_x","apply","arguments","addLikeHandler","_ref2","_callee2","responseData","_context2","prevLike","_x2","useEffect","fetchNews","_ref3","_callee3","_context3","setTimeout","window","scrollTo","_ref4","_callee4","_context4","userId","likes","isLiked","find","id","console","log","deleteCommentHandler","_ref5","_callee5","_context5","target","_x3","commentsList","map","element","_jsxs","className","parseInt","children","_jsx","author","onClick","nickname","description","article","title","LoadingSpinner","asOverlay","Card","src","image","alt","name","createdAt","slice","length","Button","isLoggedIn","style","margin","Input","label","validators","VALIDATOR_REQUIRE","onInput","size","inverse","disabled","display","textAlign","props"],"sourceRoot":""}